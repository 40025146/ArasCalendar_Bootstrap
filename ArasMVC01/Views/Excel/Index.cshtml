
@{
    ViewBag.Title = "Index";
}
<h2>此方案只支援Excel小於5000筆數</h2>
<div class="row-fluid sortable">
    <div class="box span12">
        <div class="box-header" data-original-title>
            <h2><i class="halflings-icon edit"></i><span class="break"></span>Excel基本設定</h2>
            <div class="box-icon">
                <a href="#" class="btn-setting"><i class="halflings-icon wrench"></i></a>
                <a href="#" class="btn-minimize"><i class="halflings-icon chevron-up"></i></a>
                <a href="#" class="btn-close"><i class="halflings-icon remove"></i></a>
            </div>
        </div>
        <div class="box-content">
            <form class="form-horizontal">
                <div class="control-group">
                    <label class="control-label " for="fileUpload">檔案上傳:</label>
                    <div class="controls">
                        <input id="fileUpload" type="file" />
                    </div>
                </div>
                <div class="control-group">
                    <label class="control-label " for="isHead">有標題:</label>
                    <div class="controls">
                        <input type="checkbox" class="form" name="isHead" id="isHead" checked />
                    </div>
                </div>

                <div class="control-group">
                    <label class="control-label " for="importStartRow">起始匯入列:</label>
                    <div class="controls">
                        <input type="text" class="input-xlarge" id="importStartRow" value="3" />
                    </div>
                </div>

                <div class="control-group">
                    <label class="control-label " for="preview">是否預覽:</label>
                    <div class="controls">
                        <input type="checkbox" class="input-xlarge" id="preview" checked />
                    </div>
                </div>

                <div class="control-group">
                    <label class="control-label " for=""></label>
                    <div class="controls">
                        <input id="btnUploadFile" type="button" class="btn btn-primary" value="Upload File" />
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

<div class="row-fluid sortable">
    <div class="box span12">
        <div class="box-header" data-original-title>
            <h2><i class="halflings-icon edit"></i><span class="break"></span>Aras資料設定</h2>
            <div class="box-icon">
                <a href="#" class="btn-setting"><i class="halflings-icon wrench"></i></a>
                <a href="#" class="btn-minimize"><i class="halflings-icon chevron-up"></i></a>
                <a href="#" class="btn-close"><i class="halflings-icon remove"></i></a>
            </div>
        </div>
        <div class="box-content">
            <div class="row-fluid">
                <div class="span4">
                    <h4>屬性匹配</h4>
                    <div>
                        <table class="table table-bordered">
                            <tbody id="map"></tbody>
                        </table>
                    </div>
                </div>
                <div class="span8">
                    <h4>匯入AML</h4>
                    <textarea style="width:90%;" rows="10" id="txtAML" name="txtAML">
                    
                    </textarea>
                    <div class="control-group">
                        <label class="control-label" for="selectMethod">選擇方法</label>
                        <div class="controls">
                            <div class="input-append">
                                <select id="selectMethod" data-rel="chosen">
                                    <option>Option 1</option>
                                    <option>Option 2</option>
                                    <option>Option 3</option>
                                    <option>Option 4</option>
                                    <option>Option 5</option>
                                </select>
                                <button class="btn btn-primary" type="button" id="btnSaveMethod">儲存</button>
                                <button class="btn btn-primary" type="button" id="btnAddMethod">新增方法</button>
                                <input type="text" id="myDelay" placeholder="每筆延遲ms" value="500"/>
                            </div>
                        </div>
                    </div>
                    <div>
                        <button class="btn btn-primary" type="button" id="btnImport">執行</button>
                        <button class="btn btn-primary" type="button" id="btnPause">暫停</button>
                        <button class="btn btn-primary" type="button" id="btnCancel">取消</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<hr />
<div>
    <div><span>執行狀態:</span><span id="timer_count"></span><span id=""></span><p></p><span id="timer"></span>秒</div>
</div>
<div class="table-responsive">
    <table class="table table-bordered">
        <tbody id="excel_result"></tbody>
    </table>
</div>
<div id="log">

</div>
@section scripts{
<script type="text/javascript">
        var excel_data = null;
        var mapping_property = null;
        var timer_count = 0;
        var timeout = false;
        var intervalID;
        var process = 0;
        var isPause = false;
        $(function () {
            var defaultAML="<AML>\r\n<Item type='document' action='get'>\r\n<item_number>@@1</item_number>\r\n<name>@@2</name></Item>\r\n</AML>"
            $("#txtAML").text(defaultAML);
            $("#btnUploadFile").click(function () {
                 //## 宣告一個FormData
                var data = new FormData();
                //## 將檔案append FormData
                var files = $("#fileUpload").get(0).files;
                if (files.length > 0) {
                    data.append("UploadedImage", files[0]);
                    data.append("isHead", $("#isHead").attr("checked"));
                    data.append("importStartRow", $("#importStartRow").val());
                }

                //## 透過ajax方式Post 至Action
                var ajaxRequest = $.ajax({
                    type: "POST",
                    url: "@Url.Action("Upload")",
                        contentType: false,         // 告诉jQuery不要去這置Content-Type
                        processData: false,         // 告诉jQuery不要去處理發送的數據
                        dataType: "json",
                        data: data
                })
                    .done(function (data, textStatus) {
                        JsonTransferTable("excel_result", data);
                    })
                    .fail(function(e) {
                        alert("error");
                        console.log(e);
                    });

            });
            $("#btnImport").click(function () {
                $("#log").html("");
                process = 0;
                timeout = false;
                intervalID = setInterval(ShowProgressState, 1000);
                timer_count = 0;
                var excel_data_count = $(excel_data).length;
                var txtAML = $("#txtAML").val();
                $("#timer_count").text(timer_count);
                $("#excel_count").text(excel_data_count);
                var dataImport = $("#excel_result tr");
                txtAML = txtAML.replace(/</g, "&lt").replace(/>/g,"&gt");
                ImportData(txtAML, mapping_property, dataImport);
                
            });
            $("#btnPause").click(function () {
                if (isPause==true) {
                    isPause = false;
                    $(this).text("繼續");
                } else {
                    isPause = true;
                    $(this).text("暫停");
                }
            });
            $("#btnCancel").click(function () {
                timeout = true;
            });
        });
        var ImportData = function (txtAML, mapping, dataImport) {
            current_order = 0;
            var ishead ;
            ishead = $("#isHead").attr("checked");

            if (ishead == undefined) {
                ishead = false;
            } else {
                ishead = true;
            }
            var eachCount = 5;
            //此寫法不能超過5000筆
            if ($("#preview").attr("checked") != undefined) {
                var row = 1;
                var max = $(dataImport).length;
                var internalID=setInterval(function () {
                    if (isPause==false) {
                        if (row < max) {
                            for (var i = 0; i < eachCount; i++) {
                                var d = dataImport[row++];
                                var bolChecked = $(d).find("input[type='checkbox']").attr("checked");
                                if (bolChecked != undefined) {
                                    var data_id = $(d).attr("data-tt-id");
                                    var excel_item = FindJsonDataSortOrder(data_id);
                                    if (excel_item != null) {
                                        var beforeAML = TransferAML(txtAML, mapping, excel_item);
                                        ImportApplyAML(beforeAML, data_id);
                                    }
                                }
                            }
                        } else {
                            timeout = true;
                        }
                    }
                    if (timeout == true) {
                        clearInterval(internalID);
                    }
                }, 1000); 
               
            } else {
          
            }
        }
        var TransferAML = function (txtAML, mapping, excel_item) {
            var aml;
            for (var i = 0; i < mapping.length; i++) {
                var replaceStr = excel_item[mapping[i]];
                var replaced = "@@" + i;
                txtAML = txtAML.replace(replaced, replaceStr);

            }
            aml = txtAML;
            return aml;
        }
        var ImportApplyAML = function (beforeAML, data_id) {
            var data = {
                "aml": beforeAML
            }
            $.ajax({
                type:"POST",
                url: "@Url.Action("ApplyAML")",
                dataType: "json",
                async:true,
                data: data,
                success: function (res) {
                    if (res.status == "OK") {
                        var resultTd = $("tr[data-tt-id='" + data_id + "'").find(".resultTd");
                        
                        $(resultTd).text("Success");
                        if ($("#preview").attr("checked") == undefined) {
                            //$("#log").append("<div>" + res.message + "</div>");
                        }
                    } else {
                        var resultTd = $("tr[data-tt-id='" + data_id + "'").find(".resultTd");
                        $(resultTd).text("Error:" + res.message);
                        if ($("#preview").attr("checked") == undefined) {
                            $("#log").append("<div>第" + data_id + "筆=>" + res.message + "</div>");
                        }
                    }
                    timer_count += 1;
                    $("#timer_count").text(timer_count);
                },
                error: function (res) {
                    console.log(res);
                }
            });
        }
        var current_order = 0;
        var FindJsonDataSortOrder = function (value) {
            for (var i = current_order; i < excel_data.length; i++) {
                if (excel_data[i].sort_order == value) {
                    current_order = i;
                    return excel_data[i];
                }
            }
            return null;
        }
        var JsonTransferTable = function (obj_id, data) {
            $("#" + obj_id).html("");
            var sourceObj = "#" + obj_id;
            var IsFirst = true;
            excel_data= data;
            $(data).each(function () {
                var dataObj = this;
                var tr = document.createElement("tr");

                var cboImport = "<input type='checkbox' name='import' checked>";
                var cboTd = document.createElement("td");
                $(cboTd).addClass("cboTCenter");
                if (!IsFirst) {
                    $(cboTd).append(cboImport);
                } else {
                    RefreshMapping(dataObj);
                }
                $(tr).append(cboTd);

                Object.keys(dataObj).forEach(function (k) {
                    var td = document.createElement("td");
                    if (k == "sort_order") {
                        $(tr).attr("data-tt-id", dataObj[k]);
                    }
                    if (k == "sort_order" && dataObj[k]=="1") {
                        $(td).text("");
                    } else {
                        $(td).text(dataObj[k]);
                    }

                    $(tr).append(td);
                });

                cboTd = document.createElement("td");
                if (!IsFirst) {
                    $(cboTd).addClass("resultTd");
                    $(cboTd).append("");
                } else {
                    $(cboTd).append("結果");
                }
                $(tr).append(cboTd);

                if ($("#preview").prop("checked") == true) {
                    $(sourceObj).append(tr);
                }
                IsFirst = false;
            });
        }
        var RefreshMapping = function (mappingObj) {
            $("#map").html("");
            mapping_property = new Array();

            var rows = 0;
            Object.keys(mappingObj).forEach(function (k) {
                if (rows != 0) {
                    var tr = document.createElement("tr");
                    var td = document.createElement("td");
                    var tdIndex = document.createElement("td");
                    $(tdIndex).text(rows-1);
                    $(td).text(mappingObj[k]);
                    $(tr).append(tdIndex);
                    $(tr).append(td);
                    mapping_property.push(mappingObj[k]);

                    $("#map").append(tr);
                }
                rows += 1;
            });

        }

        var time = 0;
        function ShowProgressState() {

            $("#timer").text(time);
            time++;
            if (timeout == true) {
                clearInterval(intervalID);
                $("#timer").text("結束執行 : "+time);
            }
        }
        function sleep(milliseconds) {
            var start = new Date().getTime();
            for (var i = 0; i < 1e7; i++) {
                if ((new Date().getTime() - start) > milliseconds) {
                    break;
                }
            }
        }
</script>
}


